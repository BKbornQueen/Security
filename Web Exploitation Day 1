https://sec.cybbh.io/public/security/latest/index.html
CTFD 10.50.20.30:8000/

JEGL-503-M
4Id49EHR9h39y8V

JumpBox 10.50.30.19

vta cybbh 
WinOps
xfreerdp /u:student /v:10.50.36.13 /dynamic-resolution +glyph-cache +clipboard

LinOps
xfreerdp /u:student /v:10.50.30.90 /dynamic-resolution +glyph-cache +clipboard
___________________________________________


Ping Sweep
Sends one icmp echo request packet to each host on the 192.168.1.0/24

    Linux: for i in {1..254} ;do (ping -c 1 192.168.1.$i | grep "bytes from" &) ;done

    Windows: for /L %i in (1,1,255) do @ping -n 1 -w 200 192.168.1.%i > nul && echo 192.168.1.%i is up.

port enmumeration:
for p in {1..1023}; do(echo>/dev/tcp/10.50.38.90/$p) >/dev/null 2>&1 && echo "$p open"; done 
nmap -sS -Pn 8.8.8.8 -p 135-139,22,80,443,21,8080 

Port validation:
netcat:
nc -z -v -w 1 8.8.8.8 440-443
____________
LOUD NOT STEALTHY BEWARE: wget for http://<ip> , then read the return index file in your base file store location and it will tell what the porotocol mismatch is. ?'s and weird shapes and gobbly goop is telnet, it will give you an ssh banner if ssh, if it was http it would have pulled readable files. if wget and make a connection but see nothing type something and press enter to see if it returns an http message, if it does cool it's http, if not then the other scenarios apply
_____________
Nmap Scripting Engines (NSE)
  Nmap with super power detection and scanning using scripts
___________
Scripts are stored in a scripts subdirectory of the Nmap data directory by default:
__________
Scripts subdirectory
  /usr/share/nmap/scripts
__________
For efficiency, scripts are indexed in a database stored in
__________
Scripts indexed database file location
  ../scripts/script.db
__________
Example:
Banner Grab AKA Netcat or nc
banner.nse
SCRIPT CONTENTS
    Provides a basic description of its function
    Provides a sample output of what is expected when the script is run
    Provides general info (Author, Category, Etc.)
The remainder of the script defines the arguments and functions utilized by the script to perform a banner grab
__________
usage = [[ nmap -sV --script=banner.nse <target> ]]
__________
description = [[
A simple banner grabber which connects to an open TCP port and prints out anything sent by the listening service within five seconds.

The banner will be truncated to fit into a single line, but an extra line may be printed for every
increase in the level of verbosity requested on the command line.
]]

   @output
   21/tcp open  ftp
   |_ banner: 220 FTP version 1.0\x0D\x0A
   @arg banner.ports Which ports to grab. Same syntax as -p option. Use
                     "common" to only grab common text-protocol banners.
                     Default: all ports.
   @arg banner.timeout How long to wait for a banner. Default: 5s

author = "jah"
license = "Same as Nmap--See https://nmap.org/book/man-legal.html"
categories = {"discovery", "safe"}
____________
USAGE AND EXAMPLES

nmap --script <filename>|<category>|<directory>|<expression>[,…​]
    Runs all scripts that match defined criteria.
nmap --script-help "<filename>|<category>|<directory>|<expression>[,…​]"
    Shows help content for specific scripts, categories, etc.
nmap --script-args <args>
    Allows options definied within the script to be ran in conjunction with the script.
nmap --script-args-file <filename>
    Allows options definied within the script to be pre listed in a file and then ran in conjunction with the script.
nmap --script-help <filename>|<category>|<directory>|<expression>|all[,…​]
    Shows help about scripts. For each script matching the given specification, Nmap prints the script name, its categories, and its description.
nmap --script-trace
    Similar to --packet-trace as it will output traffic data to include protocol, source, destination, and transmitted data.
_____________
dns-brute.nse
  Find valid DNS (A) records by trying a list of common sub-domains and finding those that successfully resolve.
nmap -p 80 --script dns-brute.nse <domain name>
_____________
hostmap-bfk.nse
    Find virtual hosts on an IP address that you are attempting to compromise (or assess).
nmap -p 80 --script hostmap-bfk.nse <domain name>
_____________
traceroute-geolocation.nse
    Perform a traceroute to your target IP address and have geolocation data plotted for each hop along the way.
nmap --traceroute --script traceroute-geolocation.nse -p 80 <domain name>
____________
http-enum.nse
    Attempts will be made to find valid paths on the web server that match a list of known paths for common web applications.
nmap --script http-enum <IP Address>

  The following entry shows an example of utilizing the --script-args option, identifying a valid value from within the script in order to narrow the scan.
--script-args http-enum.basepath='<Web Server Dir/>' <IP Address>
____________
smb-os-discovery.nse
    Determines the operating system, computer name, netbios name and domain of a system.
nmap -p 445 --script smb-os-discovery <IP Address / Subnet>
____________
firewalk.nse
    Discovers firewall rules using an IP Protocol Time To Live (TTL) expiration technique
nmap -p 80 --script=firewalk.nse <IP Address>
The following entry shows examples of utilizing the --script-args option, identifying a valid value from within the script in order to narrow the scan.
  --script-args=firewalk.max-retries=1 <IP Address>
  --script-args=firewalk.probe-timeout=400ms <IP Address>
  --script-args=firewalk.firewalk.max-probed-ports=7 <IP Address>
____________
https://github.com/nmap/nmap/tree/master/scripts
https://nmap.org/book/nse.html
https://nmap.org/book/man-nse.html
https://nmap.org/book/nse-usage.html
https://www.sans.org/course/open-source-intelligence-gathering
https://github.com/jivoi/awesome-osint
https://security.stackexchange.com/questions/175987/i-cant-execute-commands-through-proxychains
https://www.w3schools.com/css/css_intro.asp
https://www.w3schools.com/js/js_htmldom.asp
https://www.w3schools.com/html/default.asp
https://www.w3.org/TR/html51/
http://<ip>/webexample/htmldemo.html
https://www.exploit-db.com/google-hacking-database
https://en.wikibooks.org/wiki/OpenSSH/Cookbook/Multiplexing
https://dougvitale.wordpress.com/2011/12/21/deprecated-linux-networking-commands-and-their-replacements
_______________________
NO WGET BE STEALTHY
NAVIGATE FROM LINOPS FOR OBFUSCATION
USE TUNNEL TO EXPLOIT JUMP BOX AND BEYOND
NEVER EXPOSE THE JUMP BOX- YOU WILL LOSE YOUR TRADECRAFT
______________________
New Tunneling Method
ssh student@<linops> -X
ssh student@10.50.30.90 -X
$ssh -MS tmpjump student@10.50.30.19
$ssh -S tmp/jump dummy -O forward -D 9050
$for i in {1..254}; do (ping -c 1 172.16.82.$i | grep "bytes from" &) ; done
$proxychains nmap [IP Addr, <4th octet>, <4th octet>, <4th octet>] 
	proxychains nmap -Pn [IP Addr] -T4 -p 21-23,80
for p in {1..1023}; do(echo>/dev/tcp/10.50.38.90/$p) >/dev/null 2>&1 && echo "$p open"; done 
OR
$proxychains nc <ip> 80
$proxychains nc <ip2> 80
proxychains nc <ip3> <discovered port>
ssh -S /tmp/jump <dummy> -O forward -L -1111:192.168.28.100:80
firefox 127.0.0.1:1111
$ssh -S /tmp/jump <dummy> -O forward -L -1111:192.168.28.100:80  -L 2222:192.168.28.111.80
$firefox 127.0.0.1:1111
$ssh -S /tmp/jump <dummy> -O forward -L -1111:192.168.28.100:80  -L 2222:192.168.28.11.80  -L 4444:192.168.28.11.22

$ssh -MS /tmp/t1 student@127.0.0.1 -p 4444     #<new master socket file>#

#*** to make a correction or delete change forward to cancel***#

#ssh -S /tmp/jump <dummy> -O <cancel> -L -1111:192.168.28.100:80  -L 2222:192.168.28.11.80 #

$ssh -S /tmp/t1 dummy -O forward -L 5555:192.168.50.100:22
$ssh -MS /tmp/tmp2 <credentials>@127.0.0.1 -p 5555
_____________
New Tunneling Method Practice
______________
Step 1
connect to linops and open terminator
ssh student@<linops> -X
ssh student@10.50.30.90 -X
terminator
______________
Step 2
stealthy enmuerate jump box for the live boxes and open ports within the target network
    ping sweep
$for i in {1..254}; do (ping -c 1 172.16.82.$i | grep "bytes from" &) ; done
    port sweep
for p in {1..1023}; do(echo>/dev/tcp/10.50.38.90/$p) >/dev/null 2>&1 && echo "$p open"; done 
______________
Step 3
Create a new master socket in the /tmp/jump
$ssh -MS /tmp/jump student@10.50.30.19
$ssh -S /tmp/jump <dummy> -O forward -D 9050
$proxychains nmap [<Full_IP_Addr>, <4th octet>, <4th octet>, <4th octet>] 
	#***No longer using the Pn options with preset ports***#
    #***proxychains nmap -Pn [IP Addr] -T4 -p 21-23,80***#
$proxychains nc <ip> 80
$proxychains nc <ip2> 80
    proxychains nc <ip3> <discovered port>
____________
Step 4
Create a local forward tunnel to the jump box and the live boxes and open ports within the network using new multi-line tunneling method:
    #**the tunnels are independently built, they are just accepted as a inline command, therefore they have the ability to operate and be called on as an individual tunnel**#
    #**this multi-tunnels-inline-command allows for faster processing time and reduction in the complexity of building and accessing tunnels**#
_____________
Port 80 single tunnel, single host, single port:
ssh -S /tmp/jump <dummy> -O forward -L -1111:192.168.28.100:80      #** new tunnel format**#
firefox 127.0.0.1:1111                                              #**make the web-browser connection**#
___________
Port 80 multi tunnel in-line-command, multi-host, single port:
$ssh -S /tmp/jump <dummy> -O forward -L -1111:192.168.28.100:80  -L 2222:192.168.28.111.80  
                                                                    #**how to use multi-in-line tunnels**#
$firefox 127.0.0.1:1111         
                        #*** this makes a firefox web connection to the 1111 tunnel,# 
                        #you can call on any tunnel that has an http socket,#
                        #i.e. this works for the protocol matched 80 but this does not work for ssh.#
                        #ssh would require a separate socket creation**#
___________
Mulit-Ports 80 and 22, multi tunnel in-line-command, multi-host, multi-port:
$ssh -S /tmp/jump <dummy> -O forward -L -1111:192.168.28.100:80  -L 2222:192.168.28.11.80  -L 4444:192.168.28.11.22
$ssh -MS /tmp/t1 student@127.0.0.1 -p 4444     
                                        #<creates new master socket file and makes the ssh connection simultaneously>#
                                        #<required-ssh tunnel connection/function#>
    #**<$ssh -S /tmp/t1 student@127.0.0.1 -p 4444>**# 
                                        #<to call/access the socket in the future(of an already created Master Socket)#                                          #There is no need to re-create a master socket #
                                        #just re-connect to it by calling on it with the -S option**#
____________
New Multi-Socket creation for ssh access through a previous hop tunnel:
$ssh -S /tmp/t1 dummy -O forward -L 5555:192.168.50.100:22
$ssh -MS /tmp/tmp2 <credentials>@127.0.0.1 -p 5555
    #**<$ssh -S /tmp/tmp2 student@127.0.0.1 -p 5555>**# 
    #** to call and access the established tunnel later**#
____________
Corrections/Deletions
    #*** to make a correction or delete/change forward to cancel***#
    #ssh -S /tmp/jump <dummy> -O <cancel> -L -1111:192.168.28.100:80  -L 2222:192.168.28.11.80 #
___________
